name: RustBuild

on:
  push:
    branches:
      - main

env:
  PROG_NAME: beatman
  PKG_CONFIG_ALLOW_CROSS: 1
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            ext: ''
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: .exe
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: ''

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup code
        uses: actions/checkout@v3

      - name: Install musl and required packages
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt update && sudo apt install -qq -y musl-tools libssl-dev pkg-config build-essential --no-install-recommends

      - name: link sslconf
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          cd /usr/include/openssl/
          sudo ln -s /usr/include/gnutls/openssl.h .
          sudo ln -s ../x86_64-linux-gnu/openssl/opensslconf.h .

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}

      - uses: actions/upload-artifact@v2
        with:
          path: target/${{ matrix.target }}/release/${{ env.PROG_NAME }}${{ matrix.ext }}
          name: ${{ env.PROG_NAME }}-${{ matrix.target }}

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get date for release tag
        env:
          TZ: "Asia/Tokyo"
        run: echo "DT=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: cp artifact files
        run: |
          for file in $( find ./artifacts -type f ); do
            PL=$(echo $file | cut -f 3 -d "/")
            FULL_FILENAME=$(echo $file | cut -f 4 -d "/")
            FILENAME=$(echo $FULL_FILENAME | cut -f 1 -d ".")
            EXT=$(echo $FULL_FILENAME | cut -s -f 2 -d ".")
            if [ -n "$EXT" ] ;then
                EXT=".${EXT}"
            fi
            cp ./artifacts/${PL}/${FULL_FILENAME} /tmp/${PL}${EXT}
          done
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.DT }}
          name: Release ${{ github.ref }} ${{ env.DT }}
          files: /tmp/beatman-*
          draft: false
